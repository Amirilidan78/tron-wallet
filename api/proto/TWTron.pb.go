// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.0
// source: TWTron.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TronTransferContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address.
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send.
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TronTransferContract) Reset() {
	*x = TronTransferContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronTransferContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronTransferContract) ProtoMessage() {}

func (x *TronTransferContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronTransferContract.ProtoReflect.Descriptor instead.
func (*TronTransferContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{0}
}

func (x *TronTransferContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronTransferContract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TronTransferContract) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TronTransferAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Asset name.
	AssetName string `protobuf:"bytes,1,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	// Sender address.
	OwnerAddress string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send.
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TronTransferAssetContract) Reset() {
	*x = TronTransferAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronTransferAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronTransferAssetContract) ProtoMessage() {}

func (x *TronTransferAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronTransferAssetContract.ProtoReflect.Descriptor instead.
func (*TronTransferAssetContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{1}
}

func (x *TronTransferAssetContract) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *TronTransferAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronTransferAssetContract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TronTransferAssetContract) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TronTransferTRC20Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract name.
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Sender address.
	OwnerAddress string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Recipient address.
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Amount to send, uint256, big-endian.
	Amount []byte `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TronTransferTRC20Contract) Reset() {
	*x = TronTransferTRC20Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronTransferTRC20Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronTransferTRC20Contract) ProtoMessage() {}

func (x *TronTransferTRC20Contract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronTransferTRC20Contract.ProtoReflect.Descriptor instead.
func (*TronTransferTRC20Contract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{2}
}

func (x *TronTransferTRC20Contract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TronTransferTRC20Contract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronTransferTRC20Contract) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TronTransferTRC20Contract) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TronFreezeBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address.
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Frozen balance. Minimum 1
	FrozenBalance int64 `protobuf:"varint,2,opt,name=frozen_balance,json=frozenBalance,proto3" json:"frozen_balance,omitempty"`
	// Frozen duration
	FrozenDuration int64 `protobuf:"varint,3,opt,name=frozen_duration,json=frozenDuration,proto3" json:"frozen_duration,omitempty"`
	// Resource type: BANDWIDTH | ENERGY
	Resource string `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	// Receiver address
	ReceiverAddress string `protobuf:"bytes,15,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
}

func (x *TronFreezeBalanceContract) Reset() {
	*x = TronFreezeBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronFreezeBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronFreezeBalanceContract) ProtoMessage() {}

func (x *TronFreezeBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronFreezeBalanceContract.ProtoReflect.Descriptor instead.
func (*TronFreezeBalanceContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{3}
}

func (x *TronFreezeBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronFreezeBalanceContract) GetFrozenBalance() int64 {
	if x != nil {
		return x.FrozenBalance
	}
	return 0
}

func (x *TronFreezeBalanceContract) GetFrozenDuration() int64 {
	if x != nil {
		return x.FrozenDuration
	}
	return 0
}

func (x *TronFreezeBalanceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *TronFreezeBalanceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

type TronUnfreezeBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Resource type: BANDWIDTH | ENERGY
	Resource string `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	// Receiver address
	ReceiverAddress string `protobuf:"bytes,15,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
}

func (x *TronUnfreezeBalanceContract) Reset() {
	*x = TronUnfreezeBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronUnfreezeBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronUnfreezeBalanceContract) ProtoMessage() {}

func (x *TronUnfreezeBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronUnfreezeBalanceContract.ProtoReflect.Descriptor instead.
func (*TronUnfreezeBalanceContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{4}
}

func (x *TronUnfreezeBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronUnfreezeBalanceContract) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *TronUnfreezeBalanceContract) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

type TronUnfreezeAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *TronUnfreezeAssetContract) Reset() {
	*x = TronUnfreezeAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronUnfreezeAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronUnfreezeAssetContract) ProtoMessage() {}

func (x *TronUnfreezeAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronUnfreezeAssetContract.ProtoReflect.Descriptor instead.
func (*TronUnfreezeAssetContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{5}
}

func (x *TronUnfreezeAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type TronVoteAssetContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Vote addresses
	VoteAddress []string `protobuf:"bytes,2,rep,name=vote_address,json=voteAddress,proto3" json:"vote_address,omitempty"`
	Support     bool     `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
	Count       int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TronVoteAssetContract) Reset() {
	*x = TronVoteAssetContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronVoteAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronVoteAssetContract) ProtoMessage() {}

func (x *TronVoteAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronVoteAssetContract.ProtoReflect.Descriptor instead.
func (*TronVoteAssetContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{6}
}

func (x *TronVoteAssetContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronVoteAssetContract) GetVoteAddress() []string {
	if x != nil {
		return x.VoteAddress
	}
	return nil
}

func (x *TronVoteAssetContract) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

func (x *TronVoteAssetContract) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TronVoteWitnessContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress string                          `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	Votes        []*TronVoteWitnessContract_Vote `protobuf:"bytes,2,rep,name=votes,proto3" json:"votes,omitempty"`
	Support      bool                            `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
}

func (x *TronVoteWitnessContract) Reset() {
	*x = TronVoteWitnessContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronVoteWitnessContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronVoteWitnessContract) ProtoMessage() {}

func (x *TronVoteWitnessContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronVoteWitnessContract.ProtoReflect.Descriptor instead.
func (*TronVoteWitnessContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{7}
}

func (x *TronVoteWitnessContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronVoteWitnessContract) GetVotes() []*TronVoteWitnessContract_Vote {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *TronVoteWitnessContract) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

type TronWithdrawBalanceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender address
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *TronWithdrawBalanceContract) Reset() {
	*x = TronWithdrawBalanceContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronWithdrawBalanceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronWithdrawBalanceContract) ProtoMessage() {}

func (x *TronWithdrawBalanceContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronWithdrawBalanceContract.ProtoReflect.Descriptor instead.
func (*TronWithdrawBalanceContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{8}
}

func (x *TronWithdrawBalanceContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type TronTriggerSmartContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress    string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	CallValue       int64  `protobuf:"varint,3,opt,name=call_value,json=callValue,proto3" json:"call_value,omitempty"`
	Data            []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	CallTokenValue  int64  `protobuf:"varint,5,opt,name=call_token_value,json=callTokenValue,proto3" json:"call_token_value,omitempty"`
	TokenId         int64  `protobuf:"varint,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *TronTriggerSmartContract) Reset() {
	*x = TronTriggerSmartContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronTriggerSmartContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronTriggerSmartContract) ProtoMessage() {}

func (x *TronTriggerSmartContract) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronTriggerSmartContract.ProtoReflect.Descriptor instead.
func (*TronTriggerSmartContract) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{9}
}

func (x *TronTriggerSmartContract) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *TronTriggerSmartContract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TronTriggerSmartContract) GetCallValue() int64 {
	if x != nil {
		return x.CallValue
	}
	return 0
}

func (x *TronTriggerSmartContract) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TronTriggerSmartContract) GetCallTokenValue() int64 {
	if x != nil {
		return x.CallTokenValue
	}
	return 0
}

func (x *TronTriggerSmartContract) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type TronBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TxTrieRoot     []byte `protobuf:"bytes,2,opt,name=tx_trie_root,json=txTrieRoot,proto3" json:"tx_trie_root,omitempty"`
	ParentHash     []byte `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Number         int64  `protobuf:"varint,7,opt,name=number,proto3" json:"number,omitempty"`
	WitnessAddress []byte `protobuf:"bytes,9,opt,name=witness_address,json=witnessAddress,proto3" json:"witness_address,omitempty"`
	Version        int32  `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TronBlockHeader) Reset() {
	*x = TronBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronBlockHeader) ProtoMessage() {}

func (x *TronBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronBlockHeader.ProtoReflect.Descriptor instead.
func (*TronBlockHeader) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{10}
}

func (x *TronBlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TronBlockHeader) GetTxTrieRoot() []byte {
	if x != nil {
		return x.TxTrieRoot
	}
	return nil
}

func (x *TronBlockHeader) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *TronBlockHeader) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *TronBlockHeader) GetWitnessAddress() []byte {
	if x != nil {
		return x.WitnessAddress
	}
	return nil
}

func (x *TronBlockHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type TronTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction timestamp in milliseconds.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transaction expiration time in milliseconds.
	Expiration int64 `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// Transaction block header.
	BlockHeader *TronBlockHeader `protobuf:"bytes,3,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	// Transaction fee limit
	FeeLimit int64 `protobuf:"varint,4,opt,name=fee_limit,json=feeLimit,proto3" json:"fee_limit,omitempty"`
	// Contract.
	//
	// Types that are assignable to ContractOneof:
	//	*TronTransaction_Transfer
	//	*TronTransaction_TransferAsset
	//	*TronTransaction_FreezeBalance
	//	*TronTransaction_UnfreezeBalance
	//	*TronTransaction_UnfreezeAsset
	//	*TronTransaction_WithdrawBalance
	//	*TronTransaction_VoteAsset
	//	*TronTransaction_VoteWitness
	//	*TronTransaction_TriggerSmartContract
	//	*TronTransaction_TransferTrc20Contract
	ContractOneof isTronTransaction_ContractOneof `protobuf_oneof:"contract_oneof"`
}

func (x *TronTransaction) Reset() {
	*x = TronTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronTransaction) ProtoMessage() {}

func (x *TronTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronTransaction.ProtoReflect.Descriptor instead.
func (*TronTransaction) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{11}
}

func (x *TronTransaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TronTransaction) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *TronTransaction) GetBlockHeader() *TronBlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *TronTransaction) GetFeeLimit() int64 {
	if x != nil {
		return x.FeeLimit
	}
	return 0
}

func (m *TronTransaction) GetContractOneof() isTronTransaction_ContractOneof {
	if m != nil {
		return m.ContractOneof
	}
	return nil
}

func (x *TronTransaction) GetTransfer() *TronTransferContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *TronTransaction) GetTransferAsset() *TronTransferAssetContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_TransferAsset); ok {
		return x.TransferAsset
	}
	return nil
}

func (x *TronTransaction) GetFreezeBalance() *TronFreezeBalanceContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_FreezeBalance); ok {
		return x.FreezeBalance
	}
	return nil
}

func (x *TronTransaction) GetUnfreezeBalance() *TronUnfreezeBalanceContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_UnfreezeBalance); ok {
		return x.UnfreezeBalance
	}
	return nil
}

func (x *TronTransaction) GetUnfreezeAsset() *TronUnfreezeAssetContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_UnfreezeAsset); ok {
		return x.UnfreezeAsset
	}
	return nil
}

func (x *TronTransaction) GetWithdrawBalance() *TronWithdrawBalanceContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_WithdrawBalance); ok {
		return x.WithdrawBalance
	}
	return nil
}

func (x *TronTransaction) GetVoteAsset() *TronVoteAssetContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_VoteAsset); ok {
		return x.VoteAsset
	}
	return nil
}

func (x *TronTransaction) GetVoteWitness() *TronVoteWitnessContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_VoteWitness); ok {
		return x.VoteWitness
	}
	return nil
}

func (x *TronTransaction) GetTriggerSmartContract() *TronTriggerSmartContract {
	if x, ok := x.GetContractOneof().(*TronTransaction_TriggerSmartContract); ok {
		return x.TriggerSmartContract
	}
	return nil
}

func (x *TronTransaction) GetTransferTrc20Contract() *TronTransferTRC20Contract {
	if x, ok := x.GetContractOneof().(*TronTransaction_TransferTrc20Contract); ok {
		return x.TransferTrc20Contract
	}
	return nil
}

type isTronTransaction_ContractOneof interface {
	isTronTransaction_ContractOneof()
}

type TronTransaction_Transfer struct {
	Transfer *TronTransferContract `protobuf:"bytes,10,opt,name=transfer,proto3,oneof"`
}

type TronTransaction_TransferAsset struct {
	TransferAsset *TronTransferAssetContract `protobuf:"bytes,11,opt,name=transfer_asset,json=transferAsset,proto3,oneof"`
}

type TronTransaction_FreezeBalance struct {
	FreezeBalance *TronFreezeBalanceContract `protobuf:"bytes,12,opt,name=freeze_balance,json=freezeBalance,proto3,oneof"`
}

type TronTransaction_UnfreezeBalance struct {
	UnfreezeBalance *TronUnfreezeBalanceContract `protobuf:"bytes,13,opt,name=unfreeze_balance,json=unfreezeBalance,proto3,oneof"`
}

type TronTransaction_UnfreezeAsset struct {
	UnfreezeAsset *TronUnfreezeAssetContract `protobuf:"bytes,14,opt,name=unfreeze_asset,json=unfreezeAsset,proto3,oneof"`
}

type TronTransaction_WithdrawBalance struct {
	WithdrawBalance *TronWithdrawBalanceContract `protobuf:"bytes,15,opt,name=withdraw_balance,json=withdrawBalance,proto3,oneof"`
}

type TronTransaction_VoteAsset struct {
	VoteAsset *TronVoteAssetContract `protobuf:"bytes,16,opt,name=vote_asset,json=voteAsset,proto3,oneof"`
}

type TronTransaction_VoteWitness struct {
	VoteWitness *TronVoteWitnessContract `protobuf:"bytes,17,opt,name=vote_witness,json=voteWitness,proto3,oneof"`
}

type TronTransaction_TriggerSmartContract struct {
	TriggerSmartContract *TronTriggerSmartContract `protobuf:"bytes,18,opt,name=trigger_smart_contract,json=triggerSmartContract,proto3,oneof"`
}

type TronTransaction_TransferTrc20Contract struct {
	TransferTrc20Contract *TronTransferTRC20Contract `protobuf:"bytes,19,opt,name=transfer_trc20_contract,json=transferTrc20Contract,proto3,oneof"`
}

func (*TronTransaction_Transfer) isTronTransaction_ContractOneof() {}

func (*TronTransaction_TransferAsset) isTronTransaction_ContractOneof() {}

func (*TronTransaction_FreezeBalance) isTronTransaction_ContractOneof() {}

func (*TronTransaction_UnfreezeBalance) isTronTransaction_ContractOneof() {}

func (*TronTransaction_UnfreezeAsset) isTronTransaction_ContractOneof() {}

func (*TronTransaction_WithdrawBalance) isTronTransaction_ContractOneof() {}

func (*TronTransaction_VoteAsset) isTronTransaction_ContractOneof() {}

func (*TronTransaction_VoteWitness) isTronTransaction_ContractOneof() {}

func (*TronTransaction_TriggerSmartContract) isTronTransaction_ContractOneof() {}

func (*TronTransaction_TransferTrc20Contract) isTronTransaction_ContractOneof() {}

type TronSigningInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction.
	Transaction *TronTransaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// Private key.
	PrivateKey []byte `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *TronSigningInput) Reset() {
	*x = TronSigningInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronSigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronSigningInput) ProtoMessage() {}

func (x *TronSigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronSigningInput.ProtoReflect.Descriptor instead.
func (*TronSigningInput) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{12}
}

func (x *TronSigningInput) GetTransaction() *TronTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TronSigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

// Transaction signing output.
type TronSigningOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transaction identifier.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Signature.
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	RefBlockBytes []byte `protobuf:"bytes,3,opt,name=ref_block_bytes,json=refBlockBytes,proto3" json:"ref_block_bytes,omitempty"`
	RefBlockHash  []byte `protobuf:"bytes,4,opt,name=ref_block_hash,json=refBlockHash,proto3" json:"ref_block_hash,omitempty"`
	Json          string `protobuf:"bytes,5,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *TronSigningOutput) Reset() {
	*x = TronSigningOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronSigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronSigningOutput) ProtoMessage() {}

func (x *TronSigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronSigningOutput.ProtoReflect.Descriptor instead.
func (*TronSigningOutput) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{13}
}

func (x *TronSigningOutput) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TronSigningOutput) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TronSigningOutput) GetRefBlockBytes() []byte {
	if x != nil {
		return x.RefBlockBytes
	}
	return nil
}

func (x *TronSigningOutput) GetRefBlockHash() []byte {
	if x != nil {
		return x.RefBlockHash
	}
	return nil
}

func (x *TronSigningOutput) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type TronVoteWitnessContract_Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteAddress string `protobuf:"bytes,1,opt,name=vote_address,json=voteAddress,proto3" json:"vote_address,omitempty"`
	VoteCount   int64  `protobuf:"varint,2,opt,name=vote_count,json=voteCount,proto3" json:"vote_count,omitempty"`
}

func (x *TronVoteWitnessContract_Vote) Reset() {
	*x = TronVoteWitnessContract_Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TWTron_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TronVoteWitnessContract_Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TronVoteWitnessContract_Vote) ProtoMessage() {}

func (x *TronVoteWitnessContract_Vote) ProtoReflect() protoreflect.Message {
	mi := &file_TWTron_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TronVoteWitnessContract_Vote.ProtoReflect.Descriptor instead.
func (*TronVoteWitnessContract_Vote) Descriptor() ([]byte, []int) {
	return file_TWTron_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TronVoteWitnessContract_Vote) GetVoteAddress() string {
	if x != nil {
		return x.VoteAddress
	}
	return ""
}

func (x *TronVoteWitnessContract_Vote) GetVoteCount() int64 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

var File_TWTron_proto protoreflect.FileDescriptor

var file_TWTron_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x54, 0x57, 0x54, 0x72, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x14, 0x54, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x54, 0x72,
	0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x52, 0x43, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x6f, 0x6e,
	0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x54, 0x72, 0x6f, 0x6e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x40, 0x0a,
	0x19, 0x54, 0x72, 0x6f, 0x6e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x8f, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xdd, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x48, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x42, 0x0a, 0x1b, 0x54, 0x72, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x6f, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x0f, 0x54,
	0x72, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0c,
	0x74, 0x78, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x74, 0x78, 0x54, 0x72, 0x69, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x07, 0x0a, 0x0f, 0x54,
	0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x65, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x49, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x55, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x55, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x4f, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x43, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x57, 0x0a, 0x16, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x14, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x5a, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x63, 0x32,
	0x30, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x52, 0x43, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72,
	0x63, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x6d, 0x0a,
	0x10, 0x54, 0x72, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x38, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xa3, 0x01, 0x0a,
	0x11, 0x54, 0x72, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73,
	0x6f, 0x6e, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TWTron_proto_rawDescOnce sync.Once
	file_TWTron_proto_rawDescData = file_TWTron_proto_rawDesc
)

func file_TWTron_proto_rawDescGZIP() []byte {
	file_TWTron_proto_rawDescOnce.Do(func() {
		file_TWTron_proto_rawDescData = protoimpl.X.CompressGZIP(file_TWTron_proto_rawDescData)
	})
	return file_TWTron_proto_rawDescData
}

var file_TWTron_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_TWTron_proto_goTypes = []interface{}{
	(*TronTransferContract)(nil),         // 0: proto.TronTransferContract
	(*TronTransferAssetContract)(nil),    // 1: proto.TronTransferAssetContract
	(*TronTransferTRC20Contract)(nil),    // 2: proto.TronTransferTRC20Contract
	(*TronFreezeBalanceContract)(nil),    // 3: proto.TronFreezeBalanceContract
	(*TronUnfreezeBalanceContract)(nil),  // 4: proto.TronUnfreezeBalanceContract
	(*TronUnfreezeAssetContract)(nil),    // 5: proto.TronUnfreezeAssetContract
	(*TronVoteAssetContract)(nil),        // 6: proto.TronVoteAssetContract
	(*TronVoteWitnessContract)(nil),      // 7: proto.TronVoteWitnessContract
	(*TronWithdrawBalanceContract)(nil),  // 8: proto.TronWithdrawBalanceContract
	(*TronTriggerSmartContract)(nil),     // 9: proto.TronTriggerSmartContract
	(*TronBlockHeader)(nil),              // 10: proto.TronBlockHeader
	(*TronTransaction)(nil),              // 11: proto.TronTransaction
	(*TronSigningInput)(nil),             // 12: proto.TronSigningInput
	(*TronSigningOutput)(nil),            // 13: proto.TronSigningOutput
	(*TronVoteWitnessContract_Vote)(nil), // 14: proto.TronVoteWitnessContract.Vote
}
var file_TWTron_proto_depIdxs = []int32{
	14, // 0: proto.TronVoteWitnessContract.votes:type_name -> proto.TronVoteWitnessContract.Vote
	10, // 1: proto.TronTransaction.block_header:type_name -> proto.TronBlockHeader
	0,  // 2: proto.TronTransaction.transfer:type_name -> proto.TronTransferContract
	1,  // 3: proto.TronTransaction.transfer_asset:type_name -> proto.TronTransferAssetContract
	3,  // 4: proto.TronTransaction.freeze_balance:type_name -> proto.TronFreezeBalanceContract
	4,  // 5: proto.TronTransaction.unfreeze_balance:type_name -> proto.TronUnfreezeBalanceContract
	5,  // 6: proto.TronTransaction.unfreeze_asset:type_name -> proto.TronUnfreezeAssetContract
	8,  // 7: proto.TronTransaction.withdraw_balance:type_name -> proto.TronWithdrawBalanceContract
	6,  // 8: proto.TronTransaction.vote_asset:type_name -> proto.TronVoteAssetContract
	7,  // 9: proto.TronTransaction.vote_witness:type_name -> proto.TronVoteWitnessContract
	9,  // 10: proto.TronTransaction.trigger_smart_contract:type_name -> proto.TronTriggerSmartContract
	2,  // 11: proto.TronTransaction.transfer_trc20_contract:type_name -> proto.TronTransferTRC20Contract
	11, // 12: proto.TronSigningInput.transaction:type_name -> proto.TronTransaction
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_TWTron_proto_init() }
func file_TWTron_proto_init() {
	if File_TWTron_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_TWTron_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronTransferContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronTransferAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronTransferTRC20Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronFreezeBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronUnfreezeBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronUnfreezeAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronVoteAssetContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronVoteWitnessContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronWithdrawBalanceContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronTriggerSmartContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronSigningInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronSigningOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TWTron_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TronVoteWitnessContract_Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_TWTron_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TronTransaction_Transfer)(nil),
		(*TronTransaction_TransferAsset)(nil),
		(*TronTransaction_FreezeBalance)(nil),
		(*TronTransaction_UnfreezeBalance)(nil),
		(*TronTransaction_UnfreezeAsset)(nil),
		(*TronTransaction_WithdrawBalance)(nil),
		(*TronTransaction_VoteAsset)(nil),
		(*TronTransaction_VoteWitness)(nil),
		(*TronTransaction_TriggerSmartContract)(nil),
		(*TronTransaction_TransferTrc20Contract)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TWTron_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TWTron_proto_goTypes,
		DependencyIndexes: file_TWTron_proto_depIdxs,
		MessageInfos:      file_TWTron_proto_msgTypes,
	}.Build()
	File_TWTron_proto = out.File
	file_TWTron_proto_rawDesc = nil
	file_TWTron_proto_goTypes = nil
	file_TWTron_proto_depIdxs = nil
}
